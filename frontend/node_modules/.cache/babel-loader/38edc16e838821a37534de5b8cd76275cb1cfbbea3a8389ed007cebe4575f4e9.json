{"ast":null,"code":"var _jsxFileName = \"/home/moda/Documents/nest-auth/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport axios from 'axios';\nimport { gapi } from 'gapi-script';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isGapiReady, setIsGapiReady] = useState(false);\n  // Initialize gapi client\n  useEffect(() => {\n    const loadGapiClient = () => {\n      gapi.load('client:auth2', () => {\n        gapi.client.init({\n          clientId: '1079032050078-rvjpv3dikni78v74nkvn78eingk5sp1u.apps.googleusercontent.com',\n          plugin_name: 'chat'\n        }).then(() => {\n          setIsGapiReady(true);\n        }).catch(error => {\n          console.error('Error initializing gapi client:', error);\n        });\n      });\n    };\n    loadGapiClient();\n  }, []);\n  const handleLoginSuccess = async response => {\n    if ('tokenId' in response) {\n      const {\n        tokenId\n      } = response;\n      try {\n        const res = await axios.post('http://localhost:3000/authentication/google', {\n          token: tokenId\n        });\n        console.log('Login successful:', res.data);\n      } catch (error) {\n        console.error('Login failed:', error);\n      }\n    }\n  };\n  const handleLoginFailure = response => {\n    if (response.error === 'popup_closed_by_user') {\n      console.error('Login failed: The popup was closed before completing the sign-in.');\n    } else {\n      console.error('Login failed:', response);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: \"1079032050078-rvjpv3dikni78v74nkvn78eingk5sp1u.apps.googleusercontent.com\",\n      buttonText: \"Login with Google\",\n      onSuccess: handleLoginSuccess,\n      onFailure: handleLoginFailure,\n      cookiePolicy: 'single_host_origin'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"vO2EXwmqLzAzfF64iqsqRYLz4OY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","GoogleLogin","axios","gapi","jsxDEV","_jsxDEV","App","_s","isGapiReady","setIsGapiReady","loadGapiClient","load","client","init","clientId","plugin_name","then","catch","error","console","handleLoginSuccess","response","tokenId","res","post","token","log","data","handleLoginFailure","className","children","buttonText","onSuccess","onFailure","cookiePolicy","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/moda/Documents/nest-auth/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n    GoogleLogin,\n    GoogleLoginResponse,\n    GoogleLoginResponseOffline,\n} from 'react-google-login';\nimport axios from 'axios';\nimport {gapi} from 'gapi-script'\n\nconst App: React.FC = () => {\n    const [isGapiReady, setIsGapiReady] = useState(false);\n    // Initialize gapi client\n    useEffect(() => {\n        const loadGapiClient = () => {\n            gapi.load('client:auth2', () => {\n                gapi.client\n                    .init({\n                        clientId:\n                            '1079032050078-rvjpv3dikni78v74nkvn78eingk5sp1u.apps.googleusercontent.com',\n                        plugin_name: 'chat',\n                    })\n                    .then(() => {\n                        setIsGapiReady(true);\n                    })\n                    .catch((error: any) => {\n                        console.error('Error initializing gapi client:', error);\n                    });\n            });\n        };\n\n        loadGapiClient();\n    }, []);\n    const handleLoginSuccess = async (\n        response: GoogleLoginResponse | GoogleLoginResponseOffline\n    ) => {\n        if ('tokenId' in response) {\n            const { tokenId } = response;\n            try {\n                const res = await axios.post(\n                    'http://localhost:3000/authentication/google',\n                    { token: tokenId }\n                );\n                console.log('Login successful:', res.data);\n            } catch (error) {\n                console.error('Login failed:', error);\n            }\n        }\n    };\n\n    const handleLoginFailure = (response: any) => {\n        if (response.error === 'popup_closed_by_user') {\n            console.error(\n                'Login failed: The popup was closed before completing the sign-in.'\n            );\n        } else {\n            console.error('Login failed:', response);\n        }\n    };\n\n    return (\n        <div className='App'>\n            <GoogleLogin\n                clientId='1079032050078-rvjpv3dikni78v74nkvn78eingk5sp1u.apps.googleusercontent.com'\n                buttonText='Login with Google'\n                onSuccess={handleLoginSuccess}\n                onFailure={handleLoginFailure}\n                cookiePolicy={'single_host_origin'}\n            />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACIC,WAAW,QAGR,oBAAoB;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,QAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMW,cAAc,GAAGA,CAAA,KAAM;MACzBP,IAAI,CAACQ,IAAI,CAAC,cAAc,EAAE,MAAM;QAC5BR,IAAI,CAACS,MAAM,CACNC,IAAI,CAAC;UACFC,QAAQ,EACJ,2EAA2E;UAC/EC,WAAW,EAAE;QACjB,CAAC,CAAC,CACDC,IAAI,CAAC,MAAM;UACRP,cAAc,CAAC,IAAI,CAAC;QACxB,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAU,IAAK;UACnBC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QAC3D,CAAC,CAAC;MACV,CAAC,CAAC;IACN,CAAC;IAEDR,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMU,kBAAkB,GAAG,MACvBC,QAA0D,IACzD;IACD,IAAI,SAAS,IAAIA,QAAQ,EAAE;MACvB,MAAM;QAAEC;MAAQ,CAAC,GAAGD,QAAQ;MAC5B,IAAI;QACA,MAAME,GAAG,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CACxB,6CAA6C,EAC7C;UAAEC,KAAK,EAAEH;QAAQ,CACrB,CAAC;QACDH,OAAO,CAACO,GAAG,CAAC,mBAAmB,EAAEH,GAAG,CAACI,IAAI,CAAC;MAC9C,CAAC,CAAC,OAAOT,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACzC;IACJ;EACJ,CAAC;EAED,MAAMU,kBAAkB,GAAIP,QAAa,IAAK;IAC1C,IAAIA,QAAQ,CAACH,KAAK,KAAK,sBAAsB,EAAE;MAC3CC,OAAO,CAACD,KAAK,CACT,mEACJ,CAAC;IACL,CAAC,MAAM;MACHC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEG,QAAQ,CAAC;IAC5C;EACJ,CAAC;EAED,oBACIhB,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChBzB,OAAA,CAACJ,WAAW;MACRa,QAAQ,EAAC,2EAA2E;MACpFiB,UAAU,EAAC,mBAAmB;MAC9BC,SAAS,EAAEZ,kBAAmB;MAC9Ba,SAAS,EAAEL,kBAAmB;MAC9BM,YAAY,EAAE;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAC/B,EAAA,CA7DID,GAAa;AAAAiC,EAAA,GAAbjC,GAAa;AA+DnB,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}